{"version":3,"file":"index-legacy.C4KCqj7G.js","sources":["../../../src/pages/Login/data.ts","../../../src/pages/Login/index.tsx"],"sourcesContent":["export const loginData = [\n  {\n    key: 'account',\n    label: '账号密码登录',\n  },\n  {\n    key: 'phone',\n    label: '手机号登录',\n  },\n];\n\nexport const backgroundImageUrl =\n  'https://mdn.alipayobjects.com/huamei_gcee1x/afts/img/A*y0ZTS6WLwvgAAAAAAAAAAAAADml6AQ/fmt.webp';\n\nexport const backgroundVideoUrl =\n  'https://gw.alipayobjects.com/v/huamei_gcee1x/afts/video/jXRBRK_VAwoAAAAAAAAAAAAAK4eUAQBr';\n","import { useRef, useState } from 'react';\nimport { LockOutlined, MobileOutlined, UserOutlined } from '@ant-design/icons';\nimport {\n  LoginFormPage,\n  ProConfigProvider,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport { Button, Tabs, message, theme } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { setCookie } from '@/utils/cookies';\nimport { loginData, backgroundImageUrl, backgroundVideoUrl } from './data';\nimport './index.scss';\n\ntype LoginType = 'phone' | 'account';\n\nconst Page = () => {\n  const navigate = useNavigate();\n  const [loginType, setLoginType] = useState<LoginType>('phone');\n  const formRef = useRef(null);\n  const { token } = theme.useToken();\n\n  console.log(formRef, 'asdjnajsndjabsdhbag');\n  const onFinish = (value: { mobile: string; captcha: string }) => {\n    setCookie({\n      key: 'username',\n      value: `admin-${value.mobile}`,\n      options: { expires: 7 * 24 * 60 * 60 },\n    });\n    navigate('/');\n    message.success('登录成功');\n  };\n\n  return (\n    <div className='xms-login-page'>\n      <LoginFormPage\n        initialValues={{\n          mobile: '15512341234', // 默认用户名\n          captcha: '123456',\n        }}\n        formRef={formRef}\n        onFinish={onFinish}\n        backgroundImageUrl={backgroundImageUrl}\n        logo={''}\n        backgroundVideoUrl={backgroundVideoUrl}\n        title={<div className='xms-login-page-title'>XXXXXXXXXX管理系统</div>}\n        containerStyle={{\n          backgroundColor: 'rgba(0, 0, 0,0.3)',\n          backdropFilter: 'blur(4px)',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          right: 0,\n          bottom: 0,\n          padding: '20px',\n          width: 'fit-content',\n          height: 'fit-content',\n        }}\n      >\n        <Tabs\n          centered\n          activeKey={loginType}\n          onChange={(activeKey) => setLoginType(activeKey as LoginType)}\n          items={loginData}\n        />\n\n        {loginType === 'account' && (\n          <>\n            <ProFormText\n              name='username'\n              fieldProps={{\n                size: 'large',\n                prefix: (\n                  <UserOutlined\n                    style={{\n                      color: token.colorText,\n                    }}\n                    className='prefixIcon'\n                  />\n                ),\n              }}\n              placeholder='请输入用户名:'\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名!',\n                },\n              ]}\n            />\n            <ProFormText.Password\n              name='password'\n              fieldProps={{\n                size: 'large',\n                prefix: (\n                  <LockOutlined\n                    style={{\n                      color: token.colorText,\n                    }}\n                    className='prefixIcon'\n                  />\n                ),\n              }}\n              placeholder='请输入密码'\n              rules={[\n                {\n                  required: true,\n                  message: '请输入密码！',\n                },\n              ]}\n            />\n          </>\n        )}\n        {loginType === 'phone' && (\n          <>\n            <ProFormText\n              fieldProps={{\n                size: 'large',\n                prefix: (\n                  <MobileOutlined\n                    style={{\n                      color: token.colorText,\n                    }}\n                    className='prefixIcon'\n                  />\n                ),\n              }}\n              name='mobile'\n              placeholder='请输入手机号'\n              rules={[\n                {\n                  required: true,\n                  message: '请输入手机号！',\n                },\n                {\n                  pattern: /^1[3-9]\\d{9}$/,\n                  message: '手机号格式错误！',\n                },\n              ]}\n            />\n            <ProFormCaptcha\n              fieldProps={{\n                size: 'large',\n                prefix: (\n                  <LockOutlined\n                    style={{\n                      color: token.colorText,\n                    }}\n                    className='prefixIcon'\n                  />\n                ),\n              }}\n              captchaProps={{\n                size: 'large',\n              }}\n              placeholder='请输入验证码'\n              captchaTextRender={(timing, count) => {\n                if (timing) {\n                  return `${count} ${'获取验证码'}`;\n                }\n                return '获取验证码';\n              }}\n              name='captcha'\n              rules={[\n                {\n                  required: true,\n                  message: '请输入验证码！',\n                },\n              ]}\n              onGetCaptcha={async () => {\n                message.success('获取验证码成功！验证码为：1234');\n              }}\n            />\n          </>\n        )}\n        <div\n          style={{\n            marginBlockEnd: 24,\n          }}\n        >\n          <ProFormCheckbox noStyle name='autoLogin' className='xms-login-page-checkbox'>\n            自动登录\n          </ProFormCheckbox>\n          <Button type='primary' className='xms-login-page-password'>\n            忘记密码\n          </Button>\n        </div>\n      </LoginFormPage>\n    </div>\n  );\n};\n\nconst Login = (): JSX.Element => (\n  <ProConfigProvider>\n    <Page />\n  </ProConfigProvider>\n);\n\nexport default Login;\n"],"names":["loginData","key","label","Page","navigate","useNavigate","loginType","setLoginType","useState","formRef","useRef","token","theme","useToken","jsx","className","children","jsxs","LoginFormPage","initialValues","mobile","captcha","onFinish","value","setCookie","options","expires","message","success","backgroundImageUrl","logo","backgroundVideoUrl","title","containerStyle","backgroundColor","backdropFilter","position","top","left","transform","right","bottom","padding","width","height","Tabs","centered","activeKey","onChange","items","Fragment","ProFormText","name","fieldProps","size","prefix","UserOutlined","style","color","colorText","placeholder","rules","required","Password","LockOutlined","MobileOutlined","pattern","ProFormCaptcha","captchaProps","captchaTextRender","timing","count","onGetCaptcha","async","marginBlockEnd","ProFormCheckbox","noStyle","Button","type","exports","ProConfigProvider"],"mappings":"+oCAAO,MAAMA,EAAY,CACvB,CACEC,IAAK,UACLC,MAAO,UAET,CACED,IAAK,QACLC,MAAO,UCULC,EAAOA,KACX,MAAMC,EAAWC,KACVC,EAAWC,GAAgBC,EAAAA,SAAoB,SAChDC,EAAUC,SAAO,OACjBC,MAAEA,GAAUC,EAAMC,WActB,OAAAC,EAAAA,IAAC,MAAI,CAAAC,UAAU,iBACbC,SAAAC,EAAAA,KAACC,EAAA,CACCC,cAAe,CACbC,OAAQ,cACRC,QAAS,UAEXZ,UACAa,SAlBYC,IACNC,EAAA,CACRvB,IAAK,WACLsB,MAAO,SAASA,EAAMH,SACtBK,QAAS,CAAEC,QAAS,UAEtBtB,EAAS,KACTuB,EAAQC,QAAQ,OAAM,EAYlBC,mBD/BN,iGCgCMC,KAAM,GACNC,mBD9BN,2FC+BMC,MAAOlB,EAAAA,IAAC,MAAI,CAAAC,UAAU,uBAAuBC,SAAc,mBAC3DiB,eAAgB,CACdC,gBAAiB,oBACjBC,eAAgB,YAChBC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,EACPC,OAAQ,EACRC,QAAS,OACTC,MAAO,cACPC,OAAQ,eAGV5B,SAAA,CAAAF,EAAAA,IAAC+B,EAAA,CACCC,UAAQ,EACRC,UAAWzC,EACX0C,SAAWD,GAAcxC,EAAawC,GACtCE,MAAOjD,IAGM,YAAdM,GAEGW,EAAAA,KAAAiC,EAAAA,SAAA,CAAAlC,SAAA,CAAAF,EAAAA,IAACqC,EAAA,CACCC,KAAK,WACLC,WAAY,CACVC,KAAM,QACNC,OACEzC,EAAAA,IAAC0C,EAAA,CACCC,MAAO,CACLC,MAAO/C,EAAMgD,WAEf5C,UAAU,gBAIhB6C,YAAY,UACZC,MAAO,CACL,CACEC,UAAU,EACVnC,QAAS,cAIfb,EAAAA,IAACqC,EAAYY,SAAZ,CACCX,KAAK,WACLC,WAAY,CACVC,KAAM,QACNC,OACEzC,EAAAA,IAACkD,EAAA,CACCP,MAAO,CACLC,MAAO/C,EAAMgD,WAEf5C,UAAU,gBAIhB6C,YAAY,QACZC,MAAO,CACL,CACEC,UAAU,EACVnC,QAAS,gBAMJ,UAAdrB,GAEGW,EAAAA,KAAAiC,EAAAA,SAAA,CAAAlC,SAAA,CAAAF,EAAAA,IAACqC,EAAA,CACCE,WAAY,CACVC,KAAM,QACNC,OACEzC,EAAAA,IAACmD,EAAA,CACCR,MAAO,CACLC,MAAO/C,EAAMgD,WAEf5C,UAAU,gBAIhBqC,KAAK,SACLQ,YAAY,SACZC,MAAO,CACL,CACEC,UAAU,EACVnC,QAAS,WAEX,CACEuC,QAAS,gBACTvC,QAAS,eAIfb,EAAAA,IAACqD,EAAA,CACCd,WAAY,CACVC,KAAM,QACNC,OACEzC,EAAAA,IAACkD,EAAA,CACCP,MAAO,CACLC,MAAO/C,EAAMgD,WAEf5C,UAAU,gBAIhBqD,aAAc,CACZd,KAAM,SAERM,YAAY,SACZS,kBAAmBA,CAACC,EAAQC,IACtBD,EACK,GAAGC,UAEL,QAETnB,KAAK,UACLS,MAAO,CACL,CACEC,UAAU,EACVnC,QAAS,YAGb6C,aAAcC,UACZ9C,EAAQC,QAAQ,oBAAmB,OAK3CX,EAAAA,KAAC,MAAA,CACCwC,MAAO,CACLiB,eAAgB,IAGlB1D,SAAA,CAAAF,EAAAA,IAAC6D,GAAgBC,SAAO,EAACxB,KAAK,YAAYrC,UAAU,0BAA0BC,SAE9E,eACC6D,EAAO,CAAAC,KAAK,UAAU/D,UAAU,0BAA0BC,SAE3D,gBAGN,EAIU+D,EAAA,WAAA,IACZjE,EAAAA,IAACkE,EACC,CAAAhE,SAAAF,MAACX"}